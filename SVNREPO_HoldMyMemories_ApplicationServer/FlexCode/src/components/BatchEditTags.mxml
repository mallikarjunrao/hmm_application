<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" horizontalAlign="center" verticalAlign="middle" creationPolicy="all">
	<mx:TileList id="tagList" itemRenderer="renderers.EditTagsRenderer" width="100%" height="90%"
		 columnCount="2" dataProvider="{tagData}" backgroundColor="0" allowMultipleSelection="true"/>
	<mx:Button id="save" label="Save" click="handleSaveData()" styleName="lastButtonStyle" visible="{!isBasicUser}"/>
	<mx:Style>
		.lastButtonStyle
		{
			fillColors: #000000, #000000, #000000, #cccccc;
			corner-radius : 0;
			selection-color : #ff6633;
			color : #Ffffff;
			theme-color : #ff6633;
		}
	</mx:Style>
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.rpc.http.HTTPService;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.collections.ArrayCollection;
			[Bindable]
			private var tagData : ArrayCollection;
			[Bindable]
			public var isBasicUser : Boolean = false;
			private var count : int = 0;
			public function set dataProvider ( ac :ArrayCollection) : void
			{
				tagData = ac;
				
			}
			
			public function handleSaveData() : void
			{
				save.enabled = false;
				var dataP : ArrayCollection = tagList.dataProvider as ArrayCollection;
				if(dataP)
				{
					for(var i : int =0; i < dataP.length; i++)
					{
						var params : Object = new Object();
						var renameService : HTTPService = new HTTPService();
						params.id = dataP[i].id;
						params.name = dataP[i].name
						params.description = dataP[i].description;
						params.tags = dataP[i].tags;
						switch(dataP[i].classType)
						{
							case "chapterVO" : 
								
							 	renameService.url = "/tags/updateTag";
								break;
							case "galleryVO":
								renameService.url = "/galleries/updateGallery";
								break;
							case "webFileVO" :
								renameService.url = "/user_content/updateUserContent";
								params.creationDate = dataP[i].creationDate;		
								break;
							case "subChapterVO":
								
								renameService.url = "/sub_chapter/updateSubChapter";
								break
						}
						
						renameService.addEventListener(ResultEvent.RESULT, handleNameChangeResult);
						renameService.addEventListener(FaultEvent.FAULT, handleNameChangeFault);
						renameService.send(params);
						count++;
					}
					FadingNotifier.setBusyState();
				}
			}
			
			private function handleNameChangeResult(event : ResultEvent) : void
			{
				
				count--;
				if(count == 0)
				{
					save.enabled = true;
					FadingNotifier.removeBusyState();
				}
					
			}
			
			private function handleNameChangeFault(event : FaultEvent ) : void
			{
				Alert(event.fault.toString());
				save.enabled = true;
				FadingNotifier.removeBusyState();	
			}
			
			public function get dataProvider() : ArrayCollection
			{
				return tagData;
			}
		]]>
	</mx:Script>
</mx:VBox>
