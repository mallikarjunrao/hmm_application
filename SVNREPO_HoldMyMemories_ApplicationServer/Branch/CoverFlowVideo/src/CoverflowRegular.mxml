<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:local="*" width="820" height="425"
   backgroundColor="black" creationComplete="handleApplicationComplete()" xmlns:containers="com.dougmccune.containers.*">
  
  <mx:HTTPService id="service" result="handleResult(event)" fault="handleFault(event)"/>
	<mx:Script>
		<![CDATA[
			import com.CoverFlowEvent;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			[Bindable]
			private var videoData : ArrayCollection = new ArrayCollection();
			
			private const serviceUrl : String = "customers/chapters_display";
			
			private const navigateToUrl : String = "/tags/subchap_coverflow/";
			
			private function handleFault(event : FaultEvent) : void
			{
				trace(event.fault);
			}
			
			private function handleResult(event : ResultEvent) : void
			{
				
				if(event.result.contents.content is ArrayCollection)
				{
					var result : ArrayCollection = event.result.contents.content as ArrayCollection;
					for(var i : int =0; i<result.length; i++)
					{
						var obj : Object = new Object();
						obj.name = result[i].name.toString();
						obj.icon = result[i].icon.toString();
						obj.id = result[i].id.toString();
						videoData.addItem(obj);
					}	
				}else
				{
					
					obj = new Object();
					obj.name = event.result.contents.content.name.toString();
					obj.id = event.result.contents.content.id.toString();
					obj.icon = event.result.contents.content.icon.toString();
					videoData.addItem(obj);
					
				}
			}
			
			private function handleNavigateTo(event : CoverFlowEvent) : void
			{
				trace(event.extra.id.toString());
				var urlToNav : String = navigateToUrl + event.extra.id.toString();
				var urlReq : URLRequest = new URLRequest(urlToNav);
				navigateToURL(urlReq, "_self");
				
			}
			
			private function handleApplicationComplete() : void
			{
				var serverUrl:String = Application.application.parameters.serverUrl;
				service.url = serverUrl;
				if(serverUrl ==null)
				{
					service.url = serviceUrl;
				}
				//service.url = "test.xml";
				//navigateToUrl = Application.application.parameters.navigateToUrl;
				service.send();
				
				shelf.addEventListener(CoverFlowEvent.NAVIGATE_TO, handleNavigateTo);
			}
			
			
		]]>
	</mx:Script>
  <local:RegularCoverFlow id="shelf" dataProvider="{videoData}" width="100%" height="100%"/>
	
</mx:Application>