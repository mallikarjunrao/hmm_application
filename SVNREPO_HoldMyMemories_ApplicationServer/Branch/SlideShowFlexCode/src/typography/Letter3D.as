package typography {	import org.papervision3d.core.geom.renderables.Vertex3D;		import special.VectorShape3D;	import special.VectorShapeMaterial;			/**	 * @author Mark Barcinski	 */	public class Letter3D extends VectorShape3D {		public var width:Number;		public var height:Number;		public var char : String;		public var font:Font3D;				public function Letter3D(char:String , material:VectorShapeMaterial , font:Font3D) {			this.char = char;			this.font = font;						super(material);			getLetterFromFont();						//center vertices & flip vertically			for each(var v:Vertex3D in geometry.vertices)			{				// center				v.x -= width/2;				v.y -= height/2;								// flip 				v.y = v.y * Math.cos(Math.PI) + v.x * Math.sin(Math.PI);			}		}				private function getLetterFromFont():void		{			this.width = font.widths[char];			this.height = font.height;						createVertices(font.motifs[char]);		}		private function createVertices(motif:Array):void		{			for (var i:int=0; i<motif.length; i++) {				switch (motif[i][0]) 				{					case "M":						graphics.moveTo(motif[i][1][0], motif[i][1][1]);						break;					case "L":						graphics.lineTo(motif[i][1][0], motif[i][1][1]);						break;					case "C":						graphics.curveTo(motif[i][1][0], motif[i][1][1], motif[i][1][2], motif[i][1][3]);						break;				}			}		}	}}