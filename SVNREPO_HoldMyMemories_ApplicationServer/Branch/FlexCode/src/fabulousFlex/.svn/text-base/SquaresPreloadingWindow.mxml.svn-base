<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="vertical" width="132" verticalGap="0" implements="fabulousFlex.IProgress"
	verticalAlign="middle" horizontalAlign="center" borderStyle="none" backgroundAlpha="0.0" borderThickness="0" borderThicknessBottom="0" borderThicknessLeft="0" borderThicknessRight="0" borderThicknessTop="0" headerHeight="0"
	show="onShow(event)" hide="onHide(event)" creationComplete="init()" showCloseButton="false">
	<mx:Metadata>
	 	/** 
				TitleWindow subclass that implements preloading
				graphic display.
				Progress bar build of squares that fade in to
				fill the bar as progress advances
		**/
	 </mx:Metadata>
	<mx:Canvas  borderStyle="none"  width="116" height="37" horizontalScrollPolicy="off" verticalScrollPolicy="off" backgroundColor="#ffffff">
		<mx:HBox id="loading" verticalAlign="middle" horizontalGap="1" y="17" x="10" horizontalAlign="center" borderStyle="solid" paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2" borderColor="{_themeColor}">
			<mx:Canvas id="b1" alpha="0" width="15" height="6" backgroundColor="{_themeColor}" borderStyle="solid" cornerRadius="2" borderColor="{_themeColor}">
			</mx:Canvas>
			<mx:Canvas id="b2" alpha="0" width="15" height="6" backgroundColor="{_themeColor}" borderStyle="solid" cornerRadius="2" borderColor="{_themeColor}">
			</mx:Canvas>
			<mx:Canvas id="b3" alpha="0" width="15" height="6" backgroundColor="{_themeColor}" borderStyle="solid" cornerRadius="2" borderColor="{_themeColor}">
			</mx:Canvas>
			<mx:Canvas id="b4" alpha="0" width="15" height="6" backgroundColor="{_themeColor}" borderStyle="solid" cornerRadius="2" borderColor="{_themeColor}">
			</mx:Canvas>
			<mx:Canvas id="b5" alpha="0" width="15" height="6" backgroundColor="{_themeColor}" borderStyle="solid" cornerRadius="2" borderColor="{_themeColor}">
			</mx:Canvas>
		</mx:HBox>
		<mx:Label x="10" y="0" text="Loading" color="{_themeColor}"/>
	</mx:Canvas>
	<mx:Script>
		<![CDATA[
			import mx.events.EffectEvent;
			import mx.effects.Fade;
			import mx.collections.ArrayCollection;
			import mx.effects.easing.Bounce;
			import mx.core.UIComponent;
			import mx.effects.Move;
			import mx.effects.Effect;
			import mx.effects.easing.Circular;
			
			public static var themeColor:uint = 0x808080;
			[Bindable]
			private var _themeColor:uint;
			private var _lastIndex:int = 0;
			
			private function init():void
			{
				//initialize themeColor from static member
				_themeColor = themeColor;
				 if(this.visible)
				{
					onShow(null);
				} 
			}
			
			private function onShow(event:Event):void
			{
				reset();
				handleItemEffect(0);
				
			}
			
			private function handleItemEffect(index:int):void
			{
				var ui:UIComponent = UIComponent(loading.getChildAt(index));
				var eff:Effect = getEffect();
				eff.play([ui]);
			}

			private function getEffect():Effect
			{
				var fade:Fade = new Fade();
				fade.alphaFrom = 0;
				fade.alphaTo = 1;
				fade.duration = 700;
				return fade;
			}
			
			private function onHide(event:Event):void
			{
				reset();
			}
			
			private function reset():void
			{
				for each(var x:UIComponent in loading.getChildren())
				{
					x.alpha = 0;
				}
				_lastIndex = 0;
			}
			
			/**impl of IProgress - show progress with showing 
			1 of 5 squares in bar according to relative download progress**/
			public function progress(bytesLoaded:int,bytesTotal:int):void
			{
				var progressNum:int = (bytesLoaded /  bytesTotal)*100;
				var curIndex:int = progressNum / (100/loading.numChildren);
				if((curIndex > _lastIndex)&&(curIndex<loading.numChildren))
				{
					for(var i:int=_lastIndex+1;i<=curIndex;i++)
					{
						handleItemEffect(i);
					}
					_lastIndex = curIndex;
				}
			}
			
			
		]]>
	</mx:Script>

</mx:TitleWindow>
